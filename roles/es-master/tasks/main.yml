---
- name: Disable SELinux
  selinux:
    state: disabled

- name: Disable firewalld
  service:
    name: firewalld
    enabled: false
  register: firewalld_service_result
  failed_when: "firewalld_service_result is failed and 'Could not find the requested service' not in firewalld_service_result.msg" 
     
- name: Download x-pack plugin
  get_url:
    url: "http://{{ groups['local-repo'][0] }}/{{ repo_endpoint }}/x-pack-5.6.14.zip"
    dest: /root/   

# Install RPM 
- name: Install Java 8 
  yum: 
    name: jdk
    state: present    

- name: Install Elasticsearch
  yum: 
    name: elasticsearch
    state: present
    
- name: Install Kibana
  yum: 
    name: kibana
    state: present

- name: Install Elasticsearch Plugins
  elasticsearch_plugin: name={{ item.name }} state={{ item.state }} src={{ item.src }} force={{ item.force }}
  with_items:
    - { name: 'x-pack', state: 'present', src: 'file:///root/x-pack-5.6.14.zip', force: 'yes' }
   
- name: Check if x-pack installed
  shell: /usr/share/kibana/bin/kibana-plugin list | grep 'x-pack@5.6.14' -q
  ignore_errors: True
  register: cmd_out
  failed_when: cmd_out.rc != 1 and cmd_out.rc != 0
 
- name: Install X-Pack Plugin for Kibana   
  shell: /usr/share/kibana/bin/kibana-plugin install file:///root/x-pack-5.6.14.zip -q
  args:
    executable: /bin/bash
  when: cmd_out.rc != 0  
  
- name: Create Elasticsearch Systemd Override Directory
  file:
    path: /etc/systemd/system/elasticsearch.service.d/
    state: directory
    owner: root
    group: root

- name: Install Elasticsearch systemd override
  copy:
    src: roles/es-master/files/elasticsearch.service.d/override.conf
    dest: /etc/systemd/system/elasticsearch.service.d/override.conf
    owner: root
    group: root
    mode: 0644

- name: Create Directories
  file:
    path: /data/elasticsearch
    state: directory
    owner: elasticsearch
    group: elasticsearch
    mode: 0750

- name: Elasticsearch Configurations
  template: src={{ item.src }} dest={{ item.dest }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }}
  with_items:
    - { src: 'roles/es-master/templates/elasticsearch.yml.template', dest: '/etc/elasticsearch/elasticsearch.yml', owner: 'elasticsearch', group: 'elasticsearch', mode: '0644' }
    - { src: 'roles/es-master/templates/jvm.options.template', dest: '/etc/elasticsearch/jvm.options', owner: 'elasticsearch', group: 'elasticsearch', mode: '0644' }
    - { src: 'roles/es-master/templates/x-pack/log4j2.properties.template', dest: '/etc/elasticsearch/x-pack/log4j2.properties', owner: 'elasticsearch', group: 'elasticsearch', mode: '0644' }


- name: Kibana Configurations
  template: 
    src: roles/es-master/templates/kibana.yml.template
    dest: /etc/kibana/kibana.yml
    owner: kibana
    group: kibana
    mode: 0644

- name: Create Kibana Directories
  file:
    path: /var/log/kibana
    state: directory
    owner: kibana
    group: kibana
    mode: 0750


- name: Set PAM Limits
  pam_limits: domain={{ item.domain }} limit_type={{ item.limit_type }} limit_item={{ item.limit_item }} value={{ item.value }}
  with_items: 
    - { domain: 'elasticsearch', limit_type: 'soft', limit_item: 'memlock', value: 'unlimited' }
    - { domain: 'elasticsearch', limit_type: 'hard', limit_item: 'memlock', value: 'unlimited' }
    - { domain: 'elasticsearch', limit_type: 'soft', limit_item: 'nproc', value: '2048' }
    - { domain: 'elasticsearch', limit_type: 'hard', limit_item: 'nproc', value: '2048' }
    - { domain: 'elasticsearch', limit_type: 'soft', limit_item: 'nofile', value: '65535' }
    - { domain: 'elasticsearch', limit_type: 'hard', limit_item: 'nofile', value: '65535' }

# Enable Services. Kibana seems to not supporte "reloaded" so it is a seperate task
- name: Enable Elasticsearch Service
  systemd: 
    name: elasticsearch
    enabled: yes
    masked: no
    state: restarted

- name: Enable Kibana Service
  systemd: 
    name: kibana
    enabled: yes
    masked: no
    state: restarted